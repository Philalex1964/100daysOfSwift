{\rtf1\ansi\ansicpg1251\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;\f2\fnil\fcharset0 Menlo-Bold;
\f3\fnil\fcharset0 HelveticaNeue-Italic;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red212\green212\blue212;
\red222\green43\blue91;\red252\green55\blue54;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c86275\c86275\c86275;
\cssrgb\c90588\c27059\c43137;\cssrgb\c100000\c31373\c27059;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid101\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid201\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\qc\partightenfactor0

\f0\b\fs98 \cf2 \expnd0\expndtw0\kerning0
DAY 35\
\pard\pardeftab720\partightenfactor0

\f1\b0\fs28 \cf2 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs70 \cf2 Project 7, part three\
\pard\pardeftab720\partightenfactor0

\f1\b0\fs28 \cf2 \
\pard\pardeftab720\partightenfactor0

\fs35\fsmilli17600 \cf2 In this project we built the kind of app you\'92ll see in thousands of different iOS job interviews around the world: here\'92s a JSON feed, please parse it and show in a table view. Sure, our specific version was about one feed, but the concepts \'96\'a0fetching data, using 
\f2\b Codable
\f1\b0 , rendering things into a web view, etc \'96\'a0are applicable anywhere.\
But you\'92ve done more than just learn some new coding techniques. Michelle Obama once said \'93through my education, I didn't just develop skills, I didn't just develop the ability to learn, but I developed confidence.\'94 And that\'92s true of you, too: each time you complete these projects you add another completed project to your r\'e9sum\'e9 and you add another load of skills to your toolkit, but you\'92re also building the confidence that when you face a similar problem in the future you\'92ll realize you can look back on your work these last few days and have an instant refresher.\
And it 
\f3\i is
\f1\i0  a refresher. You see, you won\'92t remember the precise code you wrote today, and you might even forget class names like 
\f2\b JSONDecoder
\f1\b0 . But that\'92s OK: being a skilled developer isn\'92t about memorizing classes or methods \'96\'a0it\'92s about knowing 
\f3\i concepts
\f1\i0 . And if you\'92re able to apply the concepts from this project with some concepts from projects 2, 4, and 5 to make something entirely new, then you\'92re doing a great job.\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 Today you should work through the wrap up chapter for project 7, complete its review, then work through all three of its challenges.
\f1\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}{\field{\*\fldinst{HYPERLINK "https://www.hackingwithswift.com/read/7/6/wrap-up"}}{\fldrslt \expnd0\expndtw0\kerning0
Wrap up}}\expnd0\expndtw0\kerning0
\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}{\field{\*\fldinst{HYPERLINK "https://www.hackingwithswift.com/review/hws/project-7-whitehouse-petitions"}}{\fldrslt \expnd0\expndtw0\kerning0
Review for Project 7: Whitehouse Petitions}}\expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0
\cf2 Once you\'92re done, tell other people:\'a0you\'92ve built another great app for iOS, and you\'92ve learned more about parsing JSON, tab bar controllers, and more.\
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs98 \cf2 Wrap up\
\pard\pardeftab720\partightenfactor0

\f1\b0\fs35\fsmilli17600 \cf2 As your Swift skill increases, I hope you're starting to feel the balance of these projects move away from explaining the basics and toward presenting and dissecting code.\
In this project you learned how to download JSON using Swift\'92s Data type, then use the Codable protocol to convert that data into Swift objects we defined. Working with JSON is something you're going to be doing time and time again in your Swift career, and you've cracked it in about an hour of work \'96 while also learning about 
\f2\b UITabBarController
\f1\b0 , 
\f2\b UIStoryboard
\f1\b0 , and more.\
Good job!\
\pard\pardeftab720\partightenfactor0

\f0\b\fs70 \cf2 Review what you learned\
\pard\pardeftab720\partightenfactor0

\f1\b0\fs35\fsmilli17600 \cf2 Anyone can sit through a tutorial, but it takes actual work to remember what was taught. It\'92s my job to make sure you take as much from these tutorials as possible, so I\'92ve prepared a short review to help you check your learning.\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://www.hackingwithswift.com/review/hws/project-7-whitehouse-petitions"}}{\fldrslt \cf2 Click here to review what you learned in project 7}}.\
\pard\pardeftab720\partightenfactor0

\f0\b\fs70 \cf2 Challenge\
\pard\pardeftab720\partightenfactor0

\f1\b0\fs35\fsmilli17600 \cf2 One of the best ways to learn is to write your own code as often as possible, so here are three ways you should try extending this app to make sure you fully understand what\'92s going on:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	1	}\expnd0\expndtw0\kerning0
Add a Credits button to the top-right corner using 
\f2\b UIBarButtonItem
\f1\b0 . When this is tapped, show an alert telling users the data comes from the We The People API of the Whitehouse.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
Let users filter the petitions they see. This involves creating a second array of filtered items that contains only petitions matching a string the user entered. Use a 
\f2\b UIAlertController
\f1\b0  with a text field to let them enter that string. This is a tough one, so I\'92ve included some hints below if you get stuck.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	3	}\expnd0\expndtw0\kerning0
Experiment with the HTML \'96\'a0this isn\'92t a HTML or CSS tutorial, but you can find lots of resources online to give you enough knowledge to tinker with the layout a little.\
\pard\pardeftab720\partightenfactor0

\f0\b\fs70 \cf2 Hints\
\pard\pardeftab720\partightenfactor0

\f1\b0\fs35\fsmilli17600 \cf2 It is 
\f3\i vital
\f1\i0  to your learning that you try the challenges above yourself, and not just for a handful of minutes before you give up.\
Every time you try something wrong, you learn that it\'92s wrong and you\'92ll remember that it\'92s wrong. By the time you find the 
\f3\i correct
\f1\i0  solution, you\'92ll remember it much more thoroughly, while also remembering a lot of the wrong turns you took.\
This is what I mean by \'93there is no learning without struggle\'94: if something comes easily to you, it can go just as easily. But when you have to really mentally fight for something, it will stick much longer.\
But if you\'92ve already worked hard at the challenges above and are still struggling to implement them, I\'92m going to write some hints below that should guide you to the correct answer.\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 If you ignore me and read these hints without having spent at least 30 minutes trying the challenges above, the only person you\'92re cheating is yourself.
\f1\b0 \
Still here? OK. The second challenge here is to let users filter the petitions they see. To solve this you need to do a number of things:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	1	}\expnd0\expndtw0\kerning0
Have one property to store all petitions, and one to store filtered petitions. This means the user can filter the petitions several times and\'a0you don\'92t have to keep redownloading your JSON.\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
At first your filtered petitions array will be the same as the main petitions array, so just assign one to the other when your data is ready.\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	3	}\expnd0\expndtw0\kerning0
Your table view should load all its data from the filtered petitions array.\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	4	}\expnd0\expndtw0\kerning0
You\'92ll need a bar button item to show an alert controller that the user can type into.\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	5	}\expnd0\expndtw0\kerning0
Once that\'92s done, go through all the items in your petitions array, adding any you want to the filtered petition.\
\pard\pardeftab720\partightenfactor0
\cf2 The important part here is the last one: how do you decide whether a petition matches the user\'92s search? One option is to use 
\f2\b contains()
\f1\b0  to check whether the petition title or body text contains the user\'92s search string \'96\'a0try it and see how you get on!
\f0\b\fs98 \

\f1\b0\fs35\fsmilli17600 \
}